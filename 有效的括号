class Solution {
    private HashMap<Character,Character> mappings;
	public Solution() {
		this.mappings=new HashMap<Character,Character> ();
		this.mappings.put(')','(');
		this.mappings.put(']','[');
		this.mappings.put('}','{');
	}
	public  boolean isValid(String s) {
	    if(s.equals("")){
	        return true;
	    }
	    if(s.length()%2!=0) {
	    	return false;
	    }
	    
	    Stack<Character> stack = new Stack<Character>();
	    for(int i=0;i<s.length();i++) {
	    	char c= s.charAt(i);
	    	if(this.mappings.containsKey(c)) {
	    		char topElement = stack.empty()?'#':stack.pop();//stack.pop() 取栈顶值并出栈
	    		if(topElement!=this.mappings.get(c)) {
	    			return false;
	    		}
	    	}else {
    			stack.push(c);//进栈
    		}
	    }
		return stack.isEmpty();
	    
	}
}
